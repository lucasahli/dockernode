name: Terraform Build and Deploy

on:
  push:
    branches:
      - main
      - dev

jobs:
  build:
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'dev' }}
    runs-on: ubuntu-22.04 #ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build --target productionstage -t lucasahli/reminder-backend:${{ github.sha }} .
        env:
          FIREBASE_SERVICE_ACCOUNT_KEY: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}

      - name: Login to Docker Registry
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin $DOCKER_REGISTRY_URL
        env:
          DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_ACCESS_TOKEN }}
          DOCKER_REGISTRY_URL: docker.io

      - name: Push Docker image
        run: docker push lucasahli/reminder-backend:${{ github.sha }}

  deploy:
    needs: build
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'dev' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2

      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          project_id: reminder-app-803e2
          export_environment_variables: true

      - name: Initialize Terraform
        run: terraform init
        env:
          TF_LOG: DEBUG
          TF_LOG_PATH: terraform.log
          TF_VAR_docker_image_tag: ${{ github.sha }}
          TF_VAR_docker_username: ${{ vars.DOCKER_USERNAME }}
          TF_VAR_docker_password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
          TF_VAR_docker_access_token: ${{ secrets.DOCKER_ACCESS_TOKEN }}

#      - name: Force Unlock Terraform
#        run: terraform force-unlock -force 1709133003614333

      - name: Plan Terraform changes
        run: terraform plan -out=terraform.plan
        env:
          TF_LOG: DEBUG
          TF_LOG_PATH: terraform.log
          TF_VAR_docker_image_tag: ${{ github.sha }}
          TF_VAR_docker_username: ${{ vars.DOCKER_USERNAME }}
          TF_VAR_docker_password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
          TF_VAR_firebase_service_account_key: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}
          TF_VAR_docker_access_token: ${{ secrets.DOCKER_ACCESS_TOKEN }}
          TF_VAR_hash_secret: ${{ secrets.HASH_SECRET }}

      - name: Apply Terraform changes
        run: terraform apply -auto-approve terraform.plan
        env:
          TF_LOG: DEBUG
          TF_LOG_PATH: terraform.log
          TF_VAR_docker_image_tag: ${{ github.sha }}
          TF_VAR_docker_username: ${{ vars.DOCKER_USERNAME }}
          TF_VAR_docker_password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
          TF_VAR_firebase_service_account_key: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}
          TF_VAR_docker_access_token: ${{ secrets.DOCKER_ACCESS_TOKEN }}
          TF_VAR_hash_secret: ${{ secrets.HASH_SECRET }}

      - name: Log workflow summary
        run: echo "Workflow completed successfully!"

      - name: Upload logs to artifact
        uses: actions/upload-artifact@v3
        if: always() # This ensures the step runs regardless of the outcome of previous steps
        with:
          name: terraform-logs
          path: |
            terraform.log
            terraform.plan